openapi: 3.0.3
info:
  title: Graphyn API Gateway (Manual)
  version: 0.11.0-manual
  description: Threads + Auth public endpoints only.
servers:
  - url: https://api.graphyn.xyz
    description: Production
  - url: http://localhost:4000
    description: Local development
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Thread:
      type: object
      properties:
        id: { type: string, format: uuid }
        name: { type: string }
        state: { type: string, enum: [building, testing, deployed, disabled, archived] }
        system_prompt: { type: string }
        model: { type: string }
        created_at: { type: string, format: date-time }
    Message:
      type: object
      properties:
        id: { type: string, format: uuid }
        role: { type: string, enum: [user, assistant, system] }
        content: { type: string }
        timestamp: { type: string, format: date-time }
        metadata: { type: object, additionalProperties: true }
    
security:
  - bearerAuth: []
paths:
  # trimmed: no /v1/* endpoints in public manual
  /api/gateway/status:
    get:
      summary: API Gateway health
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string }
                  timestamp: { type: string, format: date-time }
  # trimmed: non-essential for customers
  /api/auth/validate:
    post:
      summary: Validate API key
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_key: { type: string }
              required: [api_key]
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid: { type: boolean }
                  organization_id: { type: string, nullable: true }
  # trimmed: profile not part of customer surface
  /api/auth/refresh:
    post:
      summary: Refresh access token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token: { type: string }
              required: [refresh_token]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token: { type: string }
                  expires_in: { type: number }
  /api/auth/session:
    post:
      summary: Validate a session token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_token: { type: string }
              required: [session_token]
      responses:
        '200':
          description: Result
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid: { type: boolean }
                  user_id: { type: string, nullable: true }
  /api/threads:
    get:
      summary: List threads
      responses:
        '200':
          description: OK
    post:
      summary: Create thread
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                type: { type: string, enum: [chat, api, multi] }
                system_prompt: { type: string }
                model: { type: string }
              required: [name]
      responses:
        '201': { description: Created }
  /api/threads/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema: { type: string }
    get:
      summary: Get thread
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
    put:
      summary: Update thread
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thread'
      responses:
        '200': { description: Updated }
    delete:
      summary: Delete thread
      responses:
        '204': { description: Deleted }
  # trimmed: state transitions/history omitted from customer starter surface
  /api/threads/{id}/messages:
    get:
      summary: Get messages
      parameters:
        - name: limit
          in: query
          schema: { type: integer, default: 50 }
        - name: offset
          in: query
          schema: { type: integer, default: 0 }
        - name: since
          in: query
          schema: { type: string, format: date-time }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  total: { type: integer }
                  hasMore: { type: boolean }
    post:
      summary: Send message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content: { type: string }
                metadata: { type: object }
              required: [content]
      responses:
        '200': { description: OK }
  /api/threads/{id}/stream:
    post:
      summary: Stream thread response (SSE)
      responses:
        '200':
          description: SSE stream
          content:
            text/event-stream:
              schema:
                type: string
  # trimmed: managerial/status/limits endpoints not exposed in public manual
